# -*- coding: utf-8 -*-
"""Thesis_Data_Flights.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_CxxlNPDPBYzd2NDHEiaz7ETDPm9lyfL
"""

pip install requests

import json

# API details
base_url = "https://api.aviationstack.com/v1/"
endpoint = "flights"
access_key = "90356201bafcece5d0a8f8e7197a7e5e"  # Replace with your actual access key

# Query parameters to filter flights departing from Dublin Airport (DUB)
params = {
    'access_key': access_key,
    'dep_iata': 'DUB',  # Departures from Dublin
    'limit': 5,  # Number of records to fetch
    'date':"2024-12-11"
}

# Send request to the API
response = requests.get(base_url + endpoint, params=params)

# Check response and print formatted results
if response.status_code == 200:
    data = response.json()

    for flight in data.get('data', []):
        print(f"Flight Number: {flight.get('flight', {}).get('iata')}")
        print(f"Airline: {flight.get('airline', {}).get('name')}")
        print(f"Scheduled Departure: {flight.get('departure', {}).get('scheduled')}")
        print(f"Estimated Departure: {flight.get('departure', {}).get('estimated')}")
        print(f"Actual Departure: {flight.get('departure', {}).get('actual')}")
        print(f"Departure Delay: {flight.get('departure', {}).get('delay', 'N/A')} minutes")
        print("-" * 50)

else:
    print(f"Error: {response.status_code}, {response.text}")

import requests
import json

# API details
base_url = "https://api.aviationstack.com/v1/"
endpoint = "flights"
access_key = "90356201bafcece5d0a8f8e7197a7e5e"  # Replace with your actual access key

# Query parameters to filter flights departing from Dublin Airport (DUB)
params = {
    'access_key': access_key,
    'dep_iata': 'DUB',  # Departures from Dublin
    'limit': 5  # Number of records to fetch
}

# Send request to the API
response = requests.get(base_url + endpoint, params=params)

# Check response and print formatted results
if response.status_code == 200:
    data = response.json()

    for flight in data.get('data', []):
        # Safe dictionary access using a helper function
        def safe_get(dictionary, key, default="N/A"):
            return dictionary.get(key, default) if dictionary else default

        print(f"Flight Number: {safe_get(flight.get('flight'), 'iata')}")
        print(f"Airline: {safe_get(flight.get('airline'), 'name')}")

        # Safely handle aircraft model and registration
        aircraft = flight.get('aircraft') or {}
        print(f"Aircraft Model: {aircraft.get('model', 'N/A')}")
        print(f"Registration: {aircraft.get('registration', 'N/A')}")

        # Departure Information
        departure = flight.get('departure') or {}
        print("\n--- Departure Info ---")
        print(f"Departure Airport: {departure.get('airport', 'N/A')}")
        print(f"Scheduled Departure: {departure.get('scheduled', 'N/A')}")
        print(f"Estimated Departure: {departure.get('estimated', 'N/A')}")
        print(f"Actual Departure: {departure.get('actual', 'N/A')}")
        print(f"Departure Terminal: {departure.get('terminal', 'N/A')}")
        print(f"Departure Gate: {departure.get('gate', 'N/A')}")
        print(f"Departure Delay: {departure.get('delay', 'N/A')} minutes")

        # Arrival Information
        arrival = flight.get('arrival') or {}
        print("\n--- Arrival Info ---")
        print(f"Arrival Airport: {arrival.get('airport', 'N/A')}")
        print(f"Scheduled Arrival: {arrival.get('scheduled', 'N/A')}")
        print(f"Estimated Arrival: {arrival.get('estimated', 'N/A')}")
        print(f"Actual Arrival: {arrival.get('actual', 'N/A')}")
        print(f"Arrival Terminal: {arrival.get('terminal', 'N/A')}")
        print(f"Arrival Gate: {arrival.get('gate', 'N/A')}")
        print(f"Arrival Delay: {arrival.get('delay', 'N/A')} minutes")

        # Flight Status
        print("\n--- Flight Status ---")
        print(f"Flight Status: {flight.get('flight_status', 'N/A')}")

        print("-" * 60)

else:
    print(f"Error: {response.status_code}, {response.text}")